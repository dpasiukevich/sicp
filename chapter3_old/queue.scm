(define (make-queue) (cons '() '()))
(define (front-ptr queue) (car queue))
(define (rear-ptr queue) (cdr queue))
(define (set-front-ptr! queue value) (set-car! queue value))
(define (set-rear-ptr! queue value) (set-cdr! queue value))
(define (empty-queue? queue) (null? (front-ptr queue)))
(define (front queue)
  (if (empty-queue? queue)
      (error "Empty queue -- FRONT" queue)
      (front-ptr queue)))

(define (insert-queue! queue item)
  (define new-pair (cons item '()))
  (cond ((empty-queue? queue) 
         (set-front-ptr! queue new-pair)
         (set-rear-ptr! queue new-pair)
         queue)
        (else (set! (cdr rear-ptr) new-pair)
              (set-rear-ptr! queue new-pair)
              queue)))

(define (delete-queue! queue)
  (if (empty-queue? queue)
      (error "Empty queue -- DELETE-QUEUE!")
      (begin (set-front-ptr! queue (cdr (front-ptr queue)))
             queue)))